#!/bin/zsh

# 1. Configurar un PATH completo para asegurar que todos los comandos se encuentren.
# Se prioriza la ruta de Homebrew para comandos.
export PATH="/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$PATH"

PROJECT_PATH="/Users/paolazapatagonzalez/Downloads/Paola/LifeFile/Projects/vueJs/vue-gamestream"
PROJECT_NAME="vue-gamestream"

# Aseg√∫rate de que el script cambie al directorio del proyecto
cd "$PROJECT_PATH" || { echo "‚ùå No se pudo entrar a la carpeta del proyecto. Abortando." >&2; exit 1 }

echo "üöÄ Iniciando proyecto $PROJECT_NAME..."

if [[ "$PROJECT_PATH" == *"/Downloads/"* ]]; then
  echo "‚ö† Est√°s trabajando desde la carpeta Downloads. Puede que Sublime solicite permisos."
fi

---

# Preguntar si el usuario quiere ejecutar el archivo git.sh
SHOULD_RUN_HOLA=$(osascript -e 'display dialog "¬øQuieres ejecutar el script \"git.sh\"?" buttons {"No", "S√≠"} default button "S√≠" with icon caution' -e 'button returned of result')

if [[ "$SHOULD_RUN_HOLA" == "S√≠" ]]; then
  # Ruta al script git.sh
  HOLA_SCRIPT="$PROJECT_PATH/git.sh"

  if [ -f "$HOLA_SCRIPT" ]; then
    echo "üîÑ Ejecutando script: '$HOLA_SCRIPT'..."
    # Ejecuta el script git.sh directamente para ver su salida en la consola
    "$HOLA_SCRIPT"
    if [ $? -eq 0 ]; then
      echo "‚úÖ Script 'git.sh' completado."
    else
      echo "‚ùå El script 'git.sh' termin√≥ con errores. Revisa la salida de Automator."
    fi
  else
    echo "‚ùå Error: El script 'git.sh' no se encontr√≥ en '$HOLA_SCRIPT'."
    echo "Aseg√∫rate de que el archivo exista y est√© en la ubicaci√≥n correcta."
  fi
else
  echo "‚è© Saltando la ejecuci√≥n de 'git.sh'."
fi

---

echo "--- Continuando con el proyecto ---"

# Abrir Sublime Text usando 'open -a' si 'subl' no funciona directamente.
if ! command -v subl &> /dev/null; then
  echo "‚ùå 'subl' no est√° disponible directamente. Intentando abrir Sublime Text con 'open -a'."
  open -a "Sublime Text" "$PROJECT_PATH" &
else
  echo "üìù Abriendo en Sublime Text usando 'subl'..."
  subl "$PROJECT_PATH" &
fi

sleep 2 # Peque√±a pausa para permitir que Sublime se inicie

echo "üì¶ Ejecutando 'npm run dev'..."
# Ejecuta npm run dev directamente. Su salida se mostrar√° en la consola del Automator.
# No redirijas a un archivo si quieres ver la salida en vivo.
npm run dev &
NPM_PID=$! # Guarda el PID de npm para poder matarlo si es necesario

# NOTA: Sin la redirecci√≥n a un archivo, el script ya no puede "leer"
# la URL autom√°ticamente de un log. Necesitar√°s abrir el navegador manualmente
# o usar otro m√©todo para capturar la URL (por ejemplo, esperar un tiempo fijo).

# Como ya no se lee de un log, las siguientes l√≠neas para esperar y abrir la URL
# bas√°ndose en el log ya no funcionar√°n con este cambio.
# Las dejaremos comentadas o las quitaremos, ya que el objetivo es ver la salida en vivo.

# Si a√∫n necesitas abrir la URL autom√°ticamente y ver la consola,
# la forma m√°s robusta es ejecutar 'npm run dev' en una nueva ventana de terminal
# y que el script principal siga un flujo diferente.

echo "El servidor de desarrollo Vue se est√° iniciando en segundo plano. La salida se mostrar√° aqu√≠."
echo "Busca manualmente la URL local en la salida de la consola."
echo "Script finalizado. El servidor de desarrollo Vue deber√≠a estar ejecut√°ndose."